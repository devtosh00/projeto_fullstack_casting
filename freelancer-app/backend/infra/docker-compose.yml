version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: freelancer-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: freelancer_db
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_SHARED_BUFFERS: 256MB
      POSTGRES_WORK_MEM: 32MB
      POSTGRES_EFFECTIVE_CACHE_SIZE: 1GB
      POSTGRES_LOG_MIN_DURATION_STATEMENT: 1000
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1GB
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    container_name: freelancer-backend
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5164:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=freelancer_db;Username=postgres;Password=postgres;Pooling=true;Maximum Pool Size=20;Connection Idle Lifetime=15;Command Timeout=60
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 512M

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 